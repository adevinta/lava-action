# Copyright 2023 Adevinta

name: Test
on: [push, pull_request]
permissions:
  contents: read
jobs:
  test:
    env:
      WANT_STATUS: 103 # ExitCodeHigh
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Lava Action
        id: lava
        uses: ./
        with:
          version: latest
          config: testdata/lava.yaml
        continue-on-error: true
      - name: Print status
        run: 'echo "Lava status: ${{ steps.lava.outputs.status }}"'
      - name: Print report
        run: 'cat "${{ steps.lava.outputs.report }}"'
      - name: Report unexpected status
        if: ${{ steps.lava.outputs.status != env.WANT_STATUS }}
        run: |
          echo "::error::unexpected status code: got: ${{ steps.lava.outputs.status }}, want: ${{ env.WANT_STATUS }}"
          exit 1
  test-defaults:
    env:
      WANT_MIN_STATUS: 100 # ExitCodeInfo
      WANT_MAX_STATUS: 104 # ExitCodeCritical
    name: Test defaults
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Lava Action
        id: lava
        uses: ./
        continue-on-error: true
      - name: Print status
        run: 'echo "Lava status: ${{ steps.lava.outputs.status }}"'
      - name: Print report
        run: 'cat "${{ steps.lava.outputs.report }}"'
      - name: Report unexpected status
        if: ${{ steps.lava.outputs.status < env.WANT_MIN_STATUS || steps.lava.outputs.status > env.WANT_MAX_STATUS }}
        run: |
          echo "::error::unexpected status code: got: ${{ steps.lava.outputs.status }}, want: [${{ env.WANT_MIN_STATUS }}, ${{ env.WANT_MAX_STATUS }}]"
          exit 1
  test-release:
    env:
      WANT_STATUS: 103 # ExitCodeHigh
    name: Test release download
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Lava Action
        id: lava
        uses: ./
        with:
          version: v0.2.0
          config: testdata/lava.yaml
        continue-on-error: true
      - name: Print status
        run: 'echo "Lava status: ${{ steps.lava.outputs.status }}"'
      - name: Print report
        run: 'cat "${{ steps.lava.outputs.report }}"'
      - name: Report unexpected status
        if: ${{ steps.lava.outputs.status != env.WANT_STATUS }}
        run: |
          echo "::error::unexpected status code: got: ${{ steps.lava.outputs.status }}, want: ${{ env.WANT_STATUS }}"
          exit 1
  test-branch:
    env:
      WANT_STATUS: 103 # ExitCodeHigh
    name: Test "go install" fallback
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Run Lava Action
        id: lava
        uses: ./
        with:
          version: main
          config: testdata/lava.yaml
        continue-on-error: true
      - name: Print status
        run: 'echo "Lava status: ${{ steps.lava.outputs.status }}"'
      - name: Print report
        run: 'cat "${{ steps.lava.outputs.report }}"'
      - name: Report unexpected status
        if: ${{ steps.lava.outputs.status != env.WANT_STATUS }}
        run: |
          echo "::error::unexpected status code: got: ${{ steps.lava.outputs.status }}, want: ${{ env.WANT_STATUS }}"
          exit 1
